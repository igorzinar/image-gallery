{"version":3,"sources":["App.js","index.js"],"names":["accessKey","process","App","useState","images","setImages","page","setPage","query","setQuery","getPhotos","apiUrl","fetch","then","res","json","data","imagesFromApi","results","useEffect","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","dataLength","length","next","hasMore","loader","map","image","index","href","links","html","rel","src","urls","regular","alt","alt_description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAKMA,G,YAAYC,+CAEH,SAASC,IAAO,IAAD,EACAC,mBAAS,IADT,mBACrBC,EADqB,KACbC,EADa,OAEJF,mBAAS,GAFL,mBAErBG,EAFqB,KAEfC,EAFe,OAGFJ,mBAAS,IAHP,mBAGrBK,EAHqB,KAGdC,EAHc,KAU5B,SAASC,IACP,IAAIC,EAAM,mCACNH,IAAOG,EAAM,uDAAmDH,IACpEG,GAAM,gBAAaL,GACnBK,GAAM,qBAAkBX,GAExBY,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAU,IAAD,EACRC,EAAa,UAAGD,EAAKE,eAAR,QAAmBF,EAStCX,EANa,IAATC,EAMM,SAACF,GAAD,4BAAgBA,GAAhB,YAA2Ba,KALzBA,MAgClB,OAlDAE,qBAAU,WACRT,MAEC,CAACJ,IAgDF,sBAAKc,UAAU,MAAf,UACE,yDAEA,uBAAMC,SA3BV,SAAsBC,GACpBA,EAAEC,iBACFhB,EAAQ,GACRG,KAwBE,UACE,uBACEc,KAAK,OACLC,YAAY,kBACZC,MAAOlB,EACPmB,SAAU,SAACL,GAAD,OAAOb,EAASa,EAAEM,OAAOF,UAErC,+CAEF,cAAC,IAAD,CACEG,WAAYzB,EAAO0B,OACnBC,KAAM,kBAAMxB,GAAQ,SAACD,GAAD,OAAUA,EAAO,MACrC0B,SAAS,EACTC,OAAQ,4CAJV,SAME,qBAAKb,UAAU,aAAf,SACGhB,EAAO8B,KAAI,SAACC,EAAOC,GAAR,OACV,mBACEhB,UAAU,QAEViB,KAAMF,EAAMG,MAAMC,KAClBX,OAAO,SACPY,IAAI,sBALN,SAOE,qBAAKC,IAAKN,EAAMO,KAAKC,QAASC,IAAKT,EAAMU,mBALpCT,aCjFnBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.980fed5e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport './App.css'\r\nimport axios from 'axios'\r\n\r\nconst accessKey = process.env.REACT_APP_UNSPLASH_ACCESS_KEY\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [query, setQuery] = useState('')\r\n\r\n  useEffect(() => {\r\n    getPhotos()\r\n    // eslint-disable-next-line\r\n  }, [page])\r\n\r\n  function getPhotos() {\r\n    let apiUrl = `https://api.unsplash.com/photos?`\r\n    if (query) apiUrl = `https://api.unsplash.com/search/photos?query=${query}`\r\n    apiUrl += `&page=${page}`\r\n    apiUrl += `&client_id=${accessKey}`\r\n\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const imagesFromApi = data.results ?? data\r\n\r\n        // if page is 1, then we need a whole new array of images\r\n        if (page === 1) {\r\n          setImages(imagesFromApi)\r\n          return\r\n        }\r\n\r\n        // if page > 1, then we are adding for our infinite scroll\r\n        setImages((images) => [...images, ...imagesFromApi])\r\n      })\r\n  }\r\n\r\n  function searchPhotos(e) {\r\n    e.preventDefault()\r\n    setPage(1)\r\n    getPhotos()\r\n  }\r\n\r\n  // Try to rewrite useState to add next page\r\n  /*  const fetchData = async () => {\r\n    const result = await axios(\r\n      `https://api.unsplash.com/photos/?client_id=${accessKey}`\r\n    )\r\n    const data = result.data\r\n    setImages(data)\r\n  } */\r\n  // return an error if there is no access key\r\n  if (!accessKey) {\r\n    return (\r\n      <a href=\"https://unsplash.com/developers\" className=\"error\">\r\n        Required: Get Your Unsplash API Key\r\n      </a>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Infinity Image Gallery!</h1>\r\n\r\n      <form onSubmit={searchPhotos}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Image...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n        <button>Search</button>\r\n      </form>\r\n      <InfiniteScroll\r\n        dataLength={images.length} //This is important field to render the next data\r\n        next={() => setPage((page) => page + 1)}\r\n        hasMore={true}\r\n        loader={<h4>Loading...</h4>}\r\n      >\r\n        <div className=\"image-grid\">\r\n          {images.map((image, index) => (\r\n            <a\r\n              className=\"image\"\r\n              key={index}\r\n              href={image.links.html}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img src={image.urls.regular} alt={image.alt_description} />\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </InfiniteScroll>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}