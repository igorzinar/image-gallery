[{"D:\\webprojects\\react\\image_gallery\\src\\index.js":"1","D:\\webprojects\\react\\image_gallery\\src\\App.js":"2"},{"size":193,"mtime":1609125655361,"results":"3","hashOfConfig":"4"},{"size":2000,"mtime":1609165518426,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"qrwaj6",{"filePath":"9","messages":"10","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"D:\\webprojects\\react\\image_gallery\\src\\index.js",[],["12","13"],"D:\\webprojects\\react\\image_gallery\\src\\App.js",["14","15"],"import React, { useEffect, useState } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport './App.css'\r\nimport axios from 'axios'\r\n\r\nconst accessKey = process.env.REACT_APP_UNSPLASH_ACCESS_KEY\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([])\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    getPhoto()\r\n  }, [page])\r\n\r\n  function getPhoto() {\r\n    fetch(\r\n      `https://api.unsplash.com/photos/?client_id=${accessKey}&page=${page}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setImages((images) => [...images, ...data])\r\n      })\r\n  }\r\n\r\n  // Try to rewrite useState to add next page\r\n  const fetchData = async () => {\r\n    const result = await axios(\r\n      `https://api.unsplash.com/photos/?client_id=${accessKey}`\r\n    )\r\n    const data = result.data\r\n    setImages(data)\r\n  }\r\n  // return an error if there is no access key\r\n  if (!accessKey) {\r\n    return (\r\n      <a href=\"https://unsplash.com/developers\" className=\"error\">\r\n        Required: Get Your Unsplash API Key\r\n      </a>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Infinity Image Gallery!</h1>\r\n\r\n      <form>\r\n        <input type=\"text\" placeholder=\"Search Image...\" />\r\n        <button>Search</button>\r\n      </form>\r\n      <InfiniteScroll\r\n        dataLength={images.length} //This is important field to render the next data\r\n        next={() => setPage((page) => page + 1)}\r\n        hasMore={true}\r\n        loader={<h4>Loading...</h4>}\r\n      >\r\n        <div className=\"image-grid\">\r\n          {images.map((image, index) => (\r\n            <a\r\n              className=\"image\"\r\n              key={index}\r\n              href={image.links.html}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img src={image.urls.regular} alt={image.alt_description} />\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </InfiniteScroll>\r\n    </div>\r\n  )\r\n}\r\n",{"ruleId":"16","replacedBy":"17"},{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","severity":1,"message":"21","line":14,"column":6,"nodeType":"22","endLine":14,"endColumn":12,"suggestions":"23"},{"ruleId":"24","severity":1,"message":"25","line":27,"column":9,"nodeType":"26","messageId":"27","endLine":27,"endColumn":18},"no-native-reassign",["28"],"no-negated-in-lhs",["29"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPhoto'. Either include it or remove the dependency array.","ArrayExpression",["30"],"no-unused-vars","'fetchData' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"31","fix":"32"},"Update the dependencies array to be: [getPhoto, page]",{"range":"33","text":"34"},[386,392],"[getPhoto, page]"]